传统布局
一、表格布局
二、浮动布局
三、学会使用文档标签和样式表外部引入模式

四、定位布局
（一）、定位
1、属性position可以实现元素的绝对定位和相对定位
属性值	说明
static	默认值，无定位
absolute	绝对定位，使用top、right、bottom、left进行位移
relative	相对定位，使用top、right、bottom、left进行位移
fixed	以窗口参考定位，使用top、right、bottom、left进行位移
2、absolute：绝对定位：以屏幕的左上角为0点，随着滚动条的滚动而滚动
3、relative：相对定位：以父元素的左上角为0点
4、fixed：绝对定位：以屏幕的左上角为0点，不随着滚动条的滚动而滚动
（二）、层次关系
1、属性z-index可以设置层次关系
属性值	说明
auto	默认层次
数字	设置层次，数字越大，层次越高：正，负，0
（三）、布局
//第一步，将需要设置参考点的父元素设置为相对定位，且不设置坐标
body {
position: relative;
}
//第二步，如果父元素设置了参考点，子元素的绝对定位将以它为基准
header {
position: absolute;
top: 0px;
left: 0px;
}
例：
<!DOCTYPE html>
<html lang="zh-cn">
<head>
	<meta charset="UTF-8">
	<title>Document</title>
	<link rel="stylesheet" type="text/css" href="css\indexcss.css">
</head>
<body>
	<header>1</header>
	<aside>2</aside>
	<article>3</article>
	<section>4</section>
	<footer>5</footer>
</body>
</html>
---------------------------------------------------------------------
@charset "utf-8";

body{
	width: 1200px;
	height: 1200px;
	border-style: solid;
	border-width: 1px;
	border-color: red;
	margin: 0 auto;
	position: relative;
}

header{
	width: 960px;
	height: 100px;
	background: red;
	margin: 0 auto;
}

aside{
	width: 200px;
	height: 500px;
	background: green;
	position: absolute;
	top: 100px;
	left: 120px;
}

article{
	width: 300px;
	height: 500px;
	background: blue;
	position: absolute;
	top: 100px;
	left: 420px;

}

section{
	width: 460px;
	height: 500px;
	background: yellow;
	position: absolute;
	top: 100px;
	left: 720px;
}

footer{
	width: 960px;
	height: 100px;
	background: black;
	position: absolute;
	top: 600px;
	left: 120px;
}

